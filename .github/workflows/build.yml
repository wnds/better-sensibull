name: Build and Release

on:
  push:
    branches:
      - main  # replace with your default branch if not 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Install Dependencies
      run: npm install

    - name: Build and Archive
      run: node createZip.js

    - name: Get version
      id: package
      run: echo "::set-output name=version::$(node -p "require('./manifest.json').version")"
      
    - name: Create Tag
      id: create_tag
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const version = "${{steps.package.outputs.version}}"
          const tag_name = `v${version}`
          const repository = context.repo
          const { owner, repo } = repository
          const ref = `refs/tags/${tag_name}`
          console.log(`Checking if tag "${tag_name}" already exists...`)
          try {
            await github.git.getRef({ owner, repo, ref })
            console.log(`Tag "${tag_name}" already exists`)
          } catch (error) {
            if (error.status === 404) {
              console.log(`Tag "${tag_name}" does not exist, creating it...`)
              const message = `Release for version ${version}`
              const sha = context.sha
              const result = await github.git.createRef({ owner, repo, ref, sha })
              return result.data
            } else {
              throw error
            }
          }

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.create_tag.outputs.tag_name}}
        release_name: Release ${{steps.package.outputs.version}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./better-sensibull-v${{ steps.package.outputs.version }}.zip
        asset_name: better-sensibull-v${{ steps.package.outputs.version }}.zip
        asset_content_type: application/zip
